s = '4645648'
#翻转字符串
print(s[::-1])
#原字符串
print(s[:])


__author__ = 'g84114734'
# _*_ coding: UTF-8 _*_
# @create_time:2021/11/18
# @File: python_str
# 打包命令pyinstaller -F package$NAME
#
__author__ = 'g84114734'

'''
python 字符串：
in
not in
r   原始字符
%   格式字符串
replace(old, new [, max])       把 将字符串中的 old 替换成 new,如果 max 指定，则替换不超过 max 次
capitalize()    将字符串的第一个字符转换为大写
count(str, beg= 0,end=len(string))      返回 str 在 string 里面出现的次数，如果 beg 或者 end 指定则返回指定范围内 str 出现的次数
center(width, fillchar)     返回一个指定的宽度 width 居中的字符串，fillchar 为填充的字符，默认为空格。
find(str, beg=0, end=len(string))       检测 str 是否包含在字符串中，如果指定范围 beg 和 end ，则检查是否包含在指定范围内，如果包含返回开始的索引值，否则返回-1
endswith(suffix, beg=0, end=len(string))        检查字符串是否以 obj 结束，如果beg 或者 end 指定则检查指定的范围内是否以 obj 结束，如果是，返回 True,否则返回 False
startswith(substr, beg=0,end=len(string))       检查字符串是否是以指定子字符串 substr 开头，是则返回 True，否则返回 False。如果beg 和 end 指定值，则在指定范围内检查。
join(seq)       以指定字符串作为分隔符，将 seq 中所有的元素(的字符串表示)合并为一个新的字符串
len(string)     返回字符串长度
lstrip()        截掉字符串左边的空格或指定字符。
rstrip()        删除字符串末尾的空格或指定字符
strip([chars])  在字符串上执行 lstrip()和 rstrip()
split(str="", num=string.count(str))        以 str 为分隔符截取字符串，如果 num 有指定值，则仅截取 num+1 个子字符串
upper()         转换字符串中的小写字母为大写
lower()         转换字符串中所有大写字符为小写.
swapcase()      将字符串中大写转换为小写，小写转换为大写
title()         返回"标题化"的字符串,就是说所有单词都是以大写开始，其余字母均为小写(见 istitle())
'''
import time
t = time.ctime()
time_list = t.split(' ')

print(time_list[3])

print('今天是 %s 年 %s 月 %s 日，现在时间是： %s' % (time_list[-1], time_list[1], time_list[2], time_list[3]))
print('今天是 {0} 年 {1} 月 {2} 日，现在时间是： {3}'.format(time_list[-1], time_list[1], time_list[2], time_list[3]))
#python 3.6之后才支持
print(f'今天是 {time_list[-1]} 年 {time_list[1]} 月 {time_list[2]} 日，现在时间是： {time_list[3]}')

s = '/ * * * start * * * /'.center(100,'-')
print(s)

f-string 格式化带百分号的字符串
要使用f-string格式化带百分号的字符串，请记住使用 %% 来表示单个百分号

