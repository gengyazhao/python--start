#列表方法实现堆栈功能：栈（stack），堆（heap）
#堆栈是一个特定的存储区或寄存器，它的一端是固定的，另一端是浮动的。对这个存储区存入的数据，是一种特殊的数据结构。
#所有的数据存入或取出，只能在浮动的一端（称栈顶）进行，严格按照“先进后出”的原则存取，位于其中间的元素，必须在其栈上部（后进栈者）诸元素逐个移出后才能取出。
#在内存储器（随机存储器）中开辟一个区域作为堆栈，叫软件堆栈；用寄存器构成的堆栈，叫硬件堆栈。
#单片机应用中，堆栈是个特殊存储区，堆栈属于RAM空间的一部分，堆栈用于函数调用、中断切换时保存和恢复现场数据。
#堆栈中的物体具有一个特性：第一个放入堆栈中的物体总是被最后拿出来， 这个特性通常称为先进后出 (FILO—First-In/Last-Out)。
#堆栈中定义了一些操作， 两个最重要的是PUSH和POP。 PUSH（入栈）操作：堆栈指针（SP）加1，然后在堆栈的顶部加入一 个元素。
#POP（出栈）操作相反，出栈则先将SP所指示的内部ram单元中内容送入直接地址寻址的单元中（目的位置），然后再将堆栈指针（SP）减1。这两种操作实现了数据项的插入和删除。
#在算术表达式求值的过程中，需要使用堆栈来保存表达式的中间值和运算符
#递归程序的递归深度通常是不确定的，需要将子程序执行的返回地址保存到堆栈这种先进后出式的结构中，以保证子程序的返回地址的正确使用顺序。
#栈（操作系统）：由操作系统自动分配释放 ，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈。
#堆（操作系统）： 一般由程序员分配释放， 若程序员不释放，程序结束时可能由OS（操作系统）回收，分配方式倒是类似于链表。
#堆栈堆栈缓存方式：
#栈使用的是一级缓存， 他们通常都是被调用时处于存储空间中，调用完毕立即释放。
#堆则是存放在二级缓存中，生命周期由虚拟机的垃圾回收算法来决定（并不是一旦成为孤儿对象就能被回收）。所以调用这些对象的速度要相对来得低一些。
#堆栈堆栈数据结构区别
#堆（数据结构）：堆可以被看成是一棵树，如：堆排序。
#栈（数据结构）：一种先进后出的数据结构。
