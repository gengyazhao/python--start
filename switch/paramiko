__author__ = 'gyz'
# _*_ coding: UTF-8 _*_
# @create_time:2021/11/15
# @File: ssh_device
# 打包命令pyinstaller -F package$NAME
#
__author__ = 'gyz'


'''
交换机SSH配置：
#创建秘钥
[SW]dsa local-key-pair create

#配置SSH认证类型（密码/其他）
[SW]ssh user user1 authentication-type password
[SW]ssh user user1 service-type stelnet
[SW]stelnet server enable
#配置认证模式
[SW]user-interface v 0 4
[SW]authentication-mode aaa
[SW]protocol inbound ssh
#配置本地用户信息
[SW]aaa
[SW]local-user user1 password cipher Huawei@123
[SW]local-user user1 privilege level 15
[SW]local-user user1 service-type ssh
[SW]

'''

import time
import paramiko

class switch9312:
    ip = ''
    cmd_list = []
    def __init__(self, ip, cmd_list, user='admin', pwd='xxxx'):
        self.ip = ip
        self.user = user
        self.pwd = pwd
        self.cmd_list = cmd_list

    def ssh_multicmd(self, asy_id=1, wait_time=2, verbose=True):
        ip = self.ip
        user = self.user
        pwd = self.pwd
        cmd_list = self.cmd_list
        try:
            print('try shh' + str(asy_id))
            ssh = paramiko.SSHClient()
            ssh.load_system_host_keys()
            ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
            # ssh.connect()
            ssh.connect(ip, 22, user, pwd, timeout=5, compress=True)
            print('You have successfully connect to ' + ip + '\n')
        except paramiko.ssh_exception.AuthenticationException:
            print("User authentication failed for " + ip + '.')
        #激活交互式shell
        command = ssh.invoke_shell()
        #等待网络设备回应
        # command.send('system\n')
        #执行具体的命令
        for cmd in cmd_list:
            command.send(cmd)
        time.sleep(wait_time)
        #获取中路由器返回信息
        output = command.recv(65535)
        x = output.decode('ascii')
        #关闭连接
        ssh.close()
        print('SSH 连接关闭！')
        if verbose:
            print(x)
        return x


if __name__ == "__main__":
    #执行命令
    commands = ['sys\n','display esn\n']
    ip = 'x.x.x.x'

    sw1 = switch9312(ip, commands)
    sw1.ssh_multicmd()
